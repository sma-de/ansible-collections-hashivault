---

  - set_fact:
      _tmp_hvault_params:
        mount_point: >-
           {{ _winad_cycles_iter.value.secret_mount | default(omit) }}
        version: >-
           {{ _winad_cycles_iter.value.engine_version | default(omit) }}

        secret: >-
          {{ _winad_cycles_iter.value.secret_path.prefix 
           ~ _winad_usr_iter.value.vault_path 
           ~ _winad_cycles_iter.value.secret_path.suffix }}


  - name: read current credentials from hashivault  ==>>  {{ _winad_svr_iter.key }}/{{ _winad_cycles_iter.key }}/{{ _winad_usr_iter.value.name }}
    hashivault_read: "{{ _tmp_hvault_params }}"
##      key: last
    register: _tmp_hvault_cur_secret


  - name: generate new random password  ==>>  {{ _winad_svr_iter.key }}/{{ _winad_cycles_iter.key }}/{{ _winad_usr_iter.value.name }}
    set_fact:
      ##_tmp_new_pw: 82koPR7e6W34
      _tmp_new_pw: "{{ _tmp_hvault_cur_secret.pw }}"
    no_log: true


##  - name: set new random password  ==>>  {{ _winad_svr_iter.key }}/{{ _winad_cycles_iter.key }}/{{ _winad_usr_iter.value.name }}
##    smabot.windows.update_adpw:
##        ## auth params, principal mandatory but fillable from ansible vars / env
##        server: "{{ _winad_svr_iter.value.url }}"
##        domain: "{{ _winad_svr_iter.value.domain }}"
##        base_dn: "{{ _winad_svr_iter.value.base_dn }}"
##
##        auth_user: "{{ _tmp_hvault_cur_secret.usr }}"
##        auth_pw: "{{ _tmp_hvault_cur_secret.pw }}"
##        
##        pw_new: "{{ _tmp_new_pw }}"
##
##        ## optional, if unset auth user creds are used
##        ##user: haha
##        ##pw_old: foo


  - set_fact:
      _tmp_hvault_params: >- 
         {{ _tmp_hvault_params | combine({ 
              'data': {
                'usr': _tmp_hvault_cur_secret.usr,
                'pw': _tmp_new_pw,
              }
            })
         }}


  - name: write back new credentials to hashivault  ==>>  {{ _winad_svr_iter.key }}/{{ _winad_cycles_iter.key }}/{{ _winad_usr_iter.value.name }}
    hashivault_write: "{{ _tmp_hvault_params }}"

