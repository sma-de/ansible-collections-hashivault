---

## TODO: support reading all secrets and regex matching secrets

    # TODO: support also kv1???
  - ansible.builtin.assert:
      that:
        - _iter_secrets.value.kv_version == 2
      fail_msg: >-
        Currently only kv2 is supported


  - set_fact:
      _cur_seccfg: >-
        {{ _iter_secrets.value.config }}


  - name: read secret
    community.hashi_vault.vault_kv2_get: >-
      {{ _cur_seccfg }}
    no_log: True
    register: _tmp_modres
    failed_when: >-
      _tmp_modres.failed and
      _tmp_modres.msg is not search("(?i)invalid or missing path")
    when: _iter_secrets.value.kv_version == 2


  - name: assert that a secret was fetched succesfully
    ansible.builtin.assert:
      that:
        - not _tmp_modres.get('failed', False)
        - _tmp_modres.secret is defined and _tmp_modres.secret
      fail_msg: >-
        Failed to read mandatory secret '{{ _cur_seccfg.path }}'
        from eninge mountpoint '{{ _cur_seccfg.engine_mount_point }}'.
        Assure that it exists and connection settings are correct. If
        this secret not being avaible is an acceptable and expectable
        outcome mark it as optional.
    when: not _iter_secrets.value.optional


    # update result var with new secret value
  - set_fact:
      smabot_hashivault_read_secrets: >-
        {{ smabot_hashivault_read_secrets
           | smabot.hashivault.append_hv_secrets(
                new_secret=_tmp_modres,
                secret_cfg=_iter_secrets,
                common_cfg=smabot_hashivault_readwrite_secrets_args_normed.get_secrets,
             )
        }}
    no_log: True
    when: _tmp_modres.secret is defined and _tmp_modres.secret

